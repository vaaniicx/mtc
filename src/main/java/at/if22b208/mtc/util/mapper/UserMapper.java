package at.if22b208.mtc.util.mapper;

import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.factory.Mappers;

import at.if22b208.mtc.dto.user.UserDataDto;
import at.if22b208.mtc.dto.user.UserStatsDto;
import at.if22b208.mtc.entity.User;

/**
 * The {@code UserMapper} interface is used with MapStruct to automatically generate
 * mapping code between {@link User}, {@link UserDataDto}, and {@link UserStatsDto} instances.
 * It defines methods for mapping a {@link User} to a {@link UserDataDto} and a {@link UserStatsDto}.
 * The implementation of this interface is generated by MapStruct at compile time.
 *
 * <p>Usage:</p>
 * <pre>
 * {@code
 * UserDataDto userDataDto = UserMapper.INSTANCE.mapToUserDataDto(user);
 * UserStatsDto userStatsDto = UserMapper.INSTANCE.mapToUserStatsDto(user);
 * }
 * </pre>
 *
 * @see Mapper
 * @see Mappers
 */
@Mapper
public interface UserMapper {
    UserMapper INSTANCE = Mappers.getMapper(UserMapper.class);

    /**
     * Maps a {@link User} to a {@link UserDataDto}.
     *
     * @param user The {@link User} to be mapped.
     * @return The corresponding {@link UserDataDto}.
     */
    UserDataDto mapToUserDataDto(User user);

    /**
     * Maps a {@link User} to a {@link UserStatsDto}.
     *
     * @param user The {@link User} to be mapped.
     * @return The corresponding {@link UserStatsDto}.
     */
    @Mapping(source = "username", target = "name")
    UserStatsDto mapToUserStatsDto(User user);
}
